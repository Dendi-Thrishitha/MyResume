{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thris\\\\Desktop\\\\My\\\\MyResume\\\\src\\\\pages\\\\Projects.js\";\nimport React from \"react\";\nimport inperson from \"../assets/inperson.webp\";\nimport license from \"../assets/license.png\";\nimport twitter from \"../assets/TWITTER.jpeg\";\nimport parkway from \"../assets/parkway.webp\";\nimport \"./Projects.css\";\nimport Header from \"../components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Projects() {\n  const projects = [{\n    src: parkway,\n    alt: \"Parkway\",\n    title: \"Parkway Application\",\n    text: [\"Implemented a web application in React and NodeJS that enables users to find available parking spaces using API, and make parking reservations.\", \"Developed responsive UI with React, achieving a 90% increase in user engagement.\", \"Leveraged Spring Boot for backend, reducing response time by 40%. Developed Node.js APIs, enhancing scalability by 70%.\"]\n  }, {\n    src: inperson,\n    alt: \"In-Person\",\n    title: \"Automatic Person Detection In Search And Rescue Operations\",\n    text: [\"Generated an automated system that analyzes a given image, identifies the humans, and announces if there are any people in a given image.\", \"Achieved a remarkable accuracy rate of 75% in detecting humans within images using Python and OpenCV’s Histogram of Gradients.\", \"Leveraging cutting-edge machine learning techniques, it significantly reduced false positives to just 2% while ensuring robust performance across diverse image datasets. The system successfully processed over 10,000 images with an average detection time of 0.5 seconds per image, demonstrating its efficiency in real-time applications.\"]\n  }, {\n    src: license,\n    alt: \"License\",\n    title: \"License Plate Detection\",\n    text: [\"Pioneered 55% accuracy in real-time number plate detection using YOLOv5, reducing false positives by 20%, enhancing surveillance systems’ efficiency.\", \"Implemented an efficient image processing pipeline, reducing detection time to 0.5 seconds per frame, enabling rapid deployment in traffic management solutions.\", \"Integrated advanced pre-processing techniques, resulting in a 60% success rate in detecting obscured or partially visible number plates, enhancing overall system robustness.\"]\n  }, {\n    src: twitter,\n    alt: \"Twitter\",\n    title: \"Faceted Search Engine on Twitter Data\",\n    text: [\"Deployed a Java Web Application in AWS using Tomcat to efficiently retrieve top tweets based on specific queries.\", \"Initiated an end-to-end Information Retrieval (IR) model with a content ingestion and indexing system, achieving a throughput of 1000 tweets per minute.\", \"Implemented search functionalities with an average response time of 100 milliseconds. Incorporated topic categorization with an accuracy of 60%, and sentiment analysis for visualization, achieving an accuracy of 45%.\"]\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid p-0\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Personal Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"projects-container\",\n        children: projects.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.src,\n            alt: item.alt,\n            className: \"project-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: item.text.map((point, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: point\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Projects;\nexport default Projects;\n\nvar _c;\n\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","inperson","license","twitter","parkway","Header","Projects","projects","src","alt","title","text","map","item","index","point","i"],"sources":["C:/Users/thris/Desktop/My/MyResume/src/pages/Projects.js"],"sourcesContent":["import React from \"react\";\r\nimport inperson from \"../assets/inperson.webp\";\r\nimport license from \"../assets/license.png\";\r\nimport twitter from \"../assets/TWITTER.jpeg\";\r\nimport parkway from \"../assets/parkway.webp\";\r\nimport \"./Projects.css\";\r\nimport Header from \"../components/Header\";\r\n\r\nfunction Projects() {\r\n  const projects = [\r\n    { \r\n      src: parkway, \r\n      alt: \"Parkway\", \r\n      title: \"Parkway Application\", \r\n      text: [\r\n        \"Implemented a web application in React and NodeJS that enables users to find available parking spaces using API, and make parking reservations.\",\r\n        \"Developed responsive UI with React, achieving a 90% increase in user engagement.\",\r\n        \"Leveraged Spring Boot for backend, reducing response time by 40%. Developed Node.js APIs, enhancing scalability by 70%.\"\r\n      ]\r\n    },\r\n    { \r\n      src: inperson, \r\n      alt: \"In-Person\", \r\n      title: \"Automatic Person Detection In Search And Rescue Operations\", \r\n      text: [\r\n        \"Generated an automated system that analyzes a given image, identifies the humans, and announces if there are any people in a given image.\",\r\n        \"Achieved a remarkable accuracy rate of 75% in detecting humans within images using Python and OpenCV’s Histogram of Gradients.\",\r\n        \"Leveraging cutting-edge machine learning techniques, it significantly reduced false positives to just 2% while ensuring robust performance across diverse image datasets. The system successfully processed over 10,000 images with an average detection time of 0.5 seconds per image, demonstrating its efficiency in real-time applications.\"\r\n      ]\r\n    },\r\n    { \r\n      src: license, \r\n      alt: \"License\", \r\n      title: \"License Plate Detection\", \r\n      text: [\r\n        \"Pioneered 55% accuracy in real-time number plate detection using YOLOv5, reducing false positives by 20%, enhancing surveillance systems’ efficiency.\",\r\n        \"Implemented an efficient image processing pipeline, reducing detection time to 0.5 seconds per frame, enabling rapid deployment in traffic management solutions.\",\r\n        \"Integrated advanced pre-processing techniques, resulting in a 60% success rate in detecting obscured or partially visible number plates, enhancing overall system robustness.\"\r\n      ]\r\n    },\r\n    { \r\n      src: twitter, \r\n      alt: \"Twitter\", \r\n      title: \"Faceted Search Engine on Twitter Data\", \r\n      text: [\r\n        \"Deployed a Java Web Application in AWS using Tomcat to efficiently retrieve top tweets based on specific queries.\",\r\n        \"Initiated an end-to-end Information Retrieval (IR) model with a content ingestion and indexing system, achieving a throughput of 1000 tweets per minute.\",\r\n        \"Implemented search functionalities with an average response time of 100 milliseconds. Incorporated topic categorization with an accuracy of 60%, and sentiment analysis for visualization, achieving an accuracy of 45%.\"\r\n      ]\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"container-fluid p-0\">\r\n      <Header />\r\n      <div className=\"projects\">\r\n        <h1>My Personal Projects</h1>\r\n        <div className=\"projects-container\">\r\n          {projects.map((item, index) => (\r\n            <div className=\"project-card\" key={index}>\r\n              <img src={item.src} alt={item.alt} className=\"project-image\" />\r\n              <div className=\"project-text\">\r\n                <h3>{item.title}</h3>\r\n                <ul>\r\n                  {item.text.map((point, i) => (\r\n                    <li key={i}>{point}</li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,SAASC,QAAT,GAAoB;EAClB,MAAMC,QAAQ,GAAG,CACf;IACEC,GAAG,EAAEJ,OADP;IAEEK,GAAG,EAAE,SAFP;IAGEC,KAAK,EAAE,qBAHT;IAIEC,IAAI,EAAE,CACJ,iJADI,EAEJ,kFAFI,EAGJ,yHAHI;EAJR,CADe,EAWf;IACEH,GAAG,EAAEP,QADP;IAEEQ,GAAG,EAAE,WAFP;IAGEC,KAAK,EAAE,4DAHT;IAIEC,IAAI,EAAE,CACJ,2IADI,EAEJ,gIAFI,EAGJ,iVAHI;EAJR,CAXe,EAqBf;IACEH,GAAG,EAAEN,OADP;IAEEO,GAAG,EAAE,SAFP;IAGEC,KAAK,EAAE,yBAHT;IAIEC,IAAI,EAAE,CACJ,uJADI,EAEJ,kKAFI,EAGJ,+KAHI;EAJR,CArBe,EA+Bf;IACEH,GAAG,EAAEL,OADP;IAEEM,GAAG,EAAE,SAFP;IAGEC,KAAK,EAAE,uCAHT;IAIEC,IAAI,EAAE,CACJ,mHADI,EAEJ,0JAFI,EAGJ,0NAHI;EAJR,CA/Be,CAAjB;EA2CA,oBACE;IAAK,SAAS,EAAC,qBAAf;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,UAAf;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,oBAAf;QAAA,UACGJ,QAAQ,CAACK,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACZ;UAAK,SAAS,EAAC,cAAf;UAAA,wBACE;YAAK,GAAG,EAAED,IAAI,CAACL,GAAf;YAAoB,GAAG,EAAEK,IAAI,CAACJ,GAA9B;YAAmC,SAAS,EAAC;UAA7C;YAAA;YAAA;YAAA;UAAA,QADF,eAEE;YAAK,SAAS,EAAC,cAAf;YAAA,wBACE;cAAA,UAAKI,IAAI,CAACH;YAAV;cAAA;cAAA;cAAA;YAAA,QADF,eAEE;cAAA,UACGG,IAAI,CAACF,IAAL,CAAUC,GAAV,CAAc,CAACG,KAAD,EAAQC,CAAR,kBACb;gBAAA,UAAaD;cAAb,GAASC,CAAT;gBAAA;gBAAA;gBAAA;cAAA,QADD;YADH;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA,GAAmCF,KAAnC;UAAA;UAAA;UAAA;QAAA,QADD;MADH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD;;KAnEQR,Q;AAqET,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}